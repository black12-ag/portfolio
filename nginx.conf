# Optimized Nginx configuration for METAH Travel Platform
# Production-ready with security, performance, and PWA support

worker_processes auto;
worker_rlimit_nofile 65535;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # Basic Settings
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    charset utf-8;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    # Performance Settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # Buffer Settings
    client_body_buffer_size 128k;
    client_max_body_size 10m;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    output_buffers 1 32k;
    postpone_output 1460;

    # Timeout Settings
    client_header_timeout 3m;
    client_body_timeout 3m;
    send_timeout 3m;

    # Gzip Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied expired no-cache no-store private must-revalidate auth;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        text/x-component
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        application/rdf+xml
        application/rss+xml
        application/xhtml+xml
        application/x-font-ttf
        application/x-javascript
        application/x-web-app-manifest+json
        font/opentype
        image/svg+xml
        image/x-icon;

    # Security Headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=(self), payment=(self)" always;

    # Content Security Policy
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-eval' 'unsafe-inline' https://js.stripe.com https://www.google-analytics.com https://www.googletagmanager.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https: blob:; connect-src 'self' https://api.stripe.com https://www.google-analytics.com; frame-src 'self' https://js.stripe.com; object-src 'none'; base-uri 'self';" always;

    # Rate Limiting
    limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/m;
    limit_req_zone $binary_remote_addr zone=api:10m rate=20r/s;

    # Cache Settings
    open_file_cache max=1000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    # Server Block
    server {
        listen 80;
        server_name _;
        root /usr/share/nginx/html;
        index index.html;

        # Rate limiting
        limit_req zone=general burst=20 nodelay;

        # Security - Hide server version
        server_tokens off;

        # Prevent access to hidden files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Static Assets with Long Caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-Content-Type-Options "nosniff" always;
            access_log off;
            
            # CORS headers for fonts and assets
            location ~* \.(woff|woff2|ttf|eot)$ {
                add_header Access-Control-Allow-Origin "*";
            }
        }

        # Service Worker with no caching
        location = /sw.js {
            expires off;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
        }

        # Manifest file
        location = /manifest.json {
            expires 1h;
            add_header Cache-Control "public";
        }

        # API Proxy (if needed)
        location /api/ {
            limit_req zone=api burst=50 nodelay;
            
            # In production, proxy to actual API server
            # proxy_pass http://backend-service:3000;
            # proxy_http_version 1.1;
            # proxy_set_header Upgrade $http_upgrade;
            # proxy_set_header Connection 'upgrade';
            # proxy_set_header Host $host;
            # proxy_set_header X-Real-IP $remote_addr;
            # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # proxy_set_header X-Forwarded-Proto $scheme;
            # proxy_cache_bypass $http_upgrade;
            
            # For now, return 404 for API calls
            return 404;
        }

        # Auth endpoints with stricter rate limiting
        location /api/auth/ {
            limit_req zone=auth burst=5 nodelay;
            return 404;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # PWA Offline Support
        location / {
            try_files $uri $uri/ @fallback;
            
            # Security headers for HTML
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header X-XSS-Protection "1; mode=block" always;
            add_header Referrer-Policy "strict-origin-when-cross-origin" always;
            
            # Cache control for HTML
            expires 1h;
            add_header Cache-Control "public, must-revalidate";
        }

        # Fallback for SPA routing
        location @fallback {
            rewrite ^.*$ /index.html last;
        }

        # Offline page for PWA
        location = /offline.html {
            expires 1h;
            add_header Cache-Control "public";
            internal;
        }

        # Error pages
        error_page 404 /index.html;
        error_page 500 502 503 504 /offline.html;

        # Security - Prevent access to sensitive files
        location ~* \.(env|log|ini|conf|yml|yaml|bak|backup|sql|dump)$ {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Block common exploit attempts
        location ~* /(wp-admin|wp-login|administrator|admin|phpmyadmin) {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Block SQL injection and XSS attempts
        if ($args ~* "(\"|'|\`|;|,|<|>|\)|%|.*exec.*|.*script.*|.*union.*|.*select.*|.*insert.*|.*drop.*|.*delete.*|.*update.*|.*alter.*)" ) {
            return 444;
        }

        # Block user agents
        if ($http_user_agent ~* (bot|crawler|spider|scanner|wget|curl) ) {
            return 444;
        }
    }

    # Additional server block for HTTPS (when SSL is configured)
    # server {
    #     listen 443 ssl http2;
    #     server_name metah.travel www.metah.travel;
    #     
    #     ssl_certificate /etc/ssl/certs/metah.travel.crt;
    #     ssl_certificate_key /etc/ssl/private/metah.travel.key;
    #     
    #     # SSL Configuration
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    #     ssl_prefer_server_ciphers off;
    #     ssl_session_cache shared:SSL:10m;
    #     ssl_session_timeout 10m;
    #     
    #     # HSTS
    #     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    #     
    #     # Include all the location blocks from the HTTP server here
    # }
}
